{"/home/travis/build/npmtest/node-npmtest-meld/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-meld/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_meld */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-meld/lib.npmtest_meld.js":{"path":"/home/travis/build/npmtest/node-npmtest-meld/lib.npmtest_meld.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_meld */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_meld = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_meld = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-meld/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-meld/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":48}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":62},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-meld && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_meld */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_meld","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_meld.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_meld.rollup.js'] =","            local.assetsDict['/assets.npmtest_meld.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_meld.__dirname + '/lib.npmtest_meld.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-meld/node_modules/meld/meld.js":{"path":"/home/travis/build/npmtest/node-npmtest-meld/node_modules/meld/meld.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":1,"89":0,"90":1,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":1,"147":6,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":0,"189":1,"190":0,"191":1,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":1,"199":1,"200":1,"201":0,"202":0,"203":1,"204":0,"205":0,"206":1,"207":0,"208":1,"209":0,"210":0,"211":1,"212":0,"213":1,"214":1,"215":1,"216":1,"217":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[1,0],"29":[1,0],"30":[1,0],"31":[0,1],"32":[1,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":6,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":1},"end":{"line":16,"column":19}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":7},"end":{"line":17,"column":19}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":23},"end":{"line":37,"column":34}}},"4":{"name":"meld","line":55,"loc":{"start":{"line":55,"column":1},"end":{"line":55,"column":41}}},"5":{"name":"Advisor","line":84,"loc":{"start":{"line":84,"column":1},"end":{"line":84,"column":32}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":27},"end":{"line":95,"column":38}}},"7":{"name":"(anonymous_7)","line":104,"loc":{"start":{"line":104,"column":15},"end":{"line":104,"column":31}}},"8":{"name":"(anonymous_8)","line":110,"loc":{"start":{"line":110,"column":15},"end":{"line":110,"column":30}}},"9":{"name":"callOrigAndOn","line":153,"loc":{"start":{"line":153,"column":3},"end":{"line":153,"column":32}}},"10":{"name":"callAfter","line":160,"loc":{"start":{"line":160,"column":3},"end":{"line":160,"column":39}}},"11":{"name":"(anonymous_11)","line":177,"loc":{"start":{"line":177,"column":21},"end":{"line":177,"column":57}}},"12":{"name":"(anonymous_12)","line":190,"loc":{"start":{"line":190,"column":38},"end":{"line":190,"column":55}}},"13":{"name":"(anonymous_13)","line":204,"loc":{"start":{"line":204,"column":21},"end":{"line":204,"column":69}}},"14":{"name":"callNext","line":216,"loc":{"start":{"line":216,"column":3},"end":{"line":216,"column":30}}},"15":{"name":"callAround","line":224,"loc":{"start":{"line":224,"column":3},"end":{"line":224,"column":40}}},"16":{"name":"proceedCount","line":251,"loc":{"start":{"line":251,"column":4},"end":{"line":251,"column":28}}},"17":{"name":"proceedCall","line":261,"loc":{"start":{"line":261,"column":4},"end":{"line":261,"column":52}}},"18":{"name":"proceedApply","line":272,"loc":{"start":{"line":272,"column":4},"end":{"line":272,"column":35}}},"19":{"name":"proceed","line":283,"loc":{"start":{"line":283,"column":4},"end":{"line":283,"column":27}}},"20":{"name":"(anonymous_20)","line":298,"loc":{"start":{"line":298,"column":7},"end":{"line":298,"column":24}}},"21":{"name":"(anonymous_21)","line":308,"loc":{"start":{"line":308,"column":12},"end":{"line":308,"column":24}}},"22":{"name":"(anonymous_22)","line":324,"loc":{"start":{"line":324,"column":10},"end":{"line":324,"column":22}}},"23":{"name":"(anonymous_23)","line":337,"loc":{"start":{"line":337,"column":15},"end":{"line":337,"column":44}}},"24":{"name":"addAspectToFunction","line":367,"loc":{"start":{"line":367,"column":1},"end":{"line":367,"column":44}}},"25":{"name":"addAspectToMethod","line":381,"loc":{"start":{"line":381,"column":1},"end":{"line":381,"column":52}}},"26":{"name":"addAspectToAll","line":387,"loc":{"start":{"line":387,"column":1},"end":{"line":387,"column":54}}},"27":{"name":"addAspectToMatches","line":401,"loc":{"start":{"line":401,"column":1},"end":{"line":401,"column":55}}},"28":{"name":"createRemover","line":416,"loc":{"start":{"line":416,"column":1},"end":{"line":416,"column":34}}},"29":{"name":"(anonymous_29)","line":418,"loc":{"start":{"line":418,"column":11},"end":{"line":418,"column":22}}},"30":{"name":"adviceApi","line":427,"loc":{"start":{"line":427,"column":1},"end":{"line":427,"column":26}}},"31":{"name":"(anonymous_31)","line":428,"loc":{"start":{"line":428,"column":9},"end":{"line":428,"column":46}}},"32":{"name":"insertAspect","line":446,"loc":{"start":{"line":446,"column":1},"end":{"line":446,"column":43}}},"33":{"name":"removeAspect","line":473,"loc":{"start":{"line":473,"column":1},"end":{"line":473,"column":43}}},"34":{"name":"applyConstructor","line":496,"loc":{"start":{"line":496,"column":1},"end":{"line":496,"column":46}}},"35":{"name":"(anonymous_35)","line":525,"loc":{"start":{"line":525,"column":28},"end":{"line":525,"column":41}}},"36":{"name":"(anonymous_36)","line":533,"loc":{"start":{"line":533,"column":4},"end":{"line":533,"column":36}}},"37":{"name":"(anonymous_37)","line":538,"loc":{"start":{"line":538,"column":3},"end":{"line":538,"column":14}}},"38":{"name":"F","line":539,"loc":{"start":{"line":539,"column":3},"end":{"line":539,"column":16}}},"39":{"name":"(anonymous_39)","line":540,"loc":{"start":{"line":540,"column":10},"end":{"line":540,"column":26}}},"40":{"name":"forEach","line":563,"loc":{"start":{"line":563,"column":1},"end":{"line":563,"column":31}}},"41":{"name":"forEachReverse","line":569,"loc":{"start":{"line":569,"column":1},"end":{"line":569,"column":38}}},"42":{"name":"joinpoint","line":575,"loc":{"start":{"line":575,"column":1},"end":{"line":575,"column":22}}},"43":{"name":"pushJoinpoint","line":579,"loc":{"start":{"line":579,"column":1},"end":{"line":579,"column":38}}},"44":{"name":"popJoinpoint","line":584,"loc":{"start":{"line":584,"column":1},"end":{"line":584,"column":25}}},"45":{"name":"definePropertyWorks","line":588,"loc":{"start":{"line":588,"column":1},"end":{"line":588,"column":32}}},"46":{"name":"(anonymous_46)","line":597,"loc":{"start":{"line":597,"column":56},"end":{"line":597,"column":75}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":598,"column":2}},"2":{"start":{"line":17,"column":0},"end":{"line":596,"column":3}},"3":{"start":{"line":25,"column":1},"end":{"line":25,"column":43}},"4":{"start":{"line":26,"column":1},"end":{"line":26,"column":43}},"5":{"start":{"line":27,"column":1},"end":{"line":27,"column":39}},"6":{"start":{"line":28,"column":1},"end":{"line":28,"column":51}},"7":{"start":{"line":29,"column":1},"end":{"line":29,"column":50}},"8":{"start":{"line":30,"column":1},"end":{"line":30,"column":42}},"9":{"start":{"line":33,"column":1},"end":{"line":33,"column":33}},"10":{"start":{"line":37,"column":1},"end":{"line":37,"column":74}},"11":{"start":{"line":37,"column":36},"end":{"line":37,"column":71}},"12":{"start":{"line":55,"column":1},"end":{"line":82,"column":2}},"13":{"start":{"line":56,"column":2},"end":{"line":56,"column":27}},"14":{"start":{"line":58,"column":2},"end":{"line":80,"column":3}},"15":{"start":{"line":59,"column":3},"end":{"line":59,"column":48}},"16":{"start":{"line":61,"column":3},"end":{"line":77,"column":4}},"17":{"start":{"line":62,"column":4},"end":{"line":62,"column":54}},"18":{"start":{"line":64,"column":4},"end":{"line":64,"column":35}},"19":{"start":{"line":66,"column":4},"end":{"line":76,"column":5}},"20":{"start":{"line":67,"column":5},"end":{"line":69,"column":6}},"21":{"start":{"line":68,"column":6},"end":{"line":68,"column":59}},"22":{"start":{"line":71,"column":11},"end":{"line":76,"column":5}},"23":{"start":{"line":72,"column":5},"end":{"line":72,"column":63}},"24":{"start":{"line":75,"column":5},"end":{"line":75,"column":59}},"25":{"start":{"line":79,"column":3},"end":{"line":79,"column":17}},"26":{"start":{"line":84,"column":1},"end":{"line":166,"column":2}},"27":{"start":{"line":86,"column":2},"end":{"line":86,"column":29}},"28":{"start":{"line":88,"column":2},"end":{"line":88,"column":23}},"29":{"start":{"line":89,"column":2},"end":{"line":89,"column":19}},"30":{"start":{"line":90,"column":2},"end":{"line":90,"column":20}},"31":{"start":{"line":92,"column":2},"end":{"line":92,"column":34}},"32":{"start":{"line":93,"column":2},"end":{"line":93,"column":17}},"33":{"start":{"line":95,"column":2},"end":{"line":163,"column":4}},"34":{"start":{"line":96,"column":3},"end":{"line":96,"column":53}},"35":{"start":{"line":101,"column":3},"end":{"line":114,"column":4}},"36":{"start":{"line":103,"column":4},"end":{"line":103,"column":43}},"37":{"start":{"line":104,"column":4},"end":{"line":106,"column":6}},"38":{"start":{"line":105,"column":5},"end":{"line":105,"column":50}},"39":{"start":{"line":109,"column":4},"end":{"line":109,"column":19}},"40":{"start":{"line":110,"column":4},"end":{"line":112,"column":6}},"41":{"start":{"line":111,"column":5},"end":{"line":111,"column":38}},"42":{"start":{"line":116,"column":3},"end":{"line":116,"column":32}},"43":{"start":{"line":117,"column":3},"end":{"line":117,"column":32}},"44":{"start":{"line":120,"column":3},"end":{"line":124,"column":6}},"45":{"start":{"line":126,"column":3},"end":{"line":151,"column":4}},"46":{"start":{"line":127,"column":4},"end":{"line":127,"column":55}},"47":{"start":{"line":129,"column":4},"end":{"line":135,"column":5}},"48":{"start":{"line":130,"column":5},"end":{"line":130,"column":86}},"49":{"start":{"line":132,"column":5},"end":{"line":132,"column":48}},"50":{"start":{"line":134,"column":5},"end":{"line":134,"column":33}},"51":{"start":{"line":137,"column":4},"end":{"line":137,"column":30}},"52":{"start":{"line":139,"column":4},"end":{"line":139,"column":31}},"53":{"start":{"line":140,"column":4},"end":{"line":140,"column":29}},"54":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"55":{"start":{"line":143,"column":5},"end":{"line":143,"column":31}},"56":{"start":{"line":146,"column":4},"end":{"line":146,"column":28}},"57":{"start":{"line":150,"column":4},"end":{"line":150,"column":19}},"58":{"start":{"line":153,"column":3},"end":{"line":158,"column":4}},"59":{"start":{"line":154,"column":4},"end":{"line":154,"column":32}},"60":{"start":{"line":155,"column":4},"end":{"line":155,"column":51}},"61":{"start":{"line":157,"column":4},"end":{"line":157,"column":18}},"62":{"start":{"line":160,"column":3},"end":{"line":162,"column":4}},"63":{"start":{"line":161,"column":4},"end":{"line":161,"column":56}},"64":{"start":{"line":165,"column":2},"end":{"line":165,"column":78}},"65":{"start":{"line":168,"column":1},"end":{"line":328,"column":3}},"66":{"start":{"line":181,"column":3},"end":{"line":181,"column":25}},"67":{"start":{"line":183,"column":3},"end":{"line":183,"column":38}},"68":{"start":{"line":184,"column":3},"end":{"line":186,"column":4}},"69":{"start":{"line":185,"column":4},"end":{"line":185,"column":11}},"70":{"start":{"line":188,"column":3},"end":{"line":188,"column":36}},"71":{"start":{"line":190,"column":3},"end":{"line":193,"column":6}},"72":{"start":{"line":191,"column":4},"end":{"line":191,"column":31}},"73":{"start":{"line":192,"column":4},"end":{"line":192,"column":42}},"74":{"start":{"line":205,"column":3},"end":{"line":205,"column":20}},"75":{"start":{"line":207,"column":3},"end":{"line":207,"column":33}},"76":{"start":{"line":208,"column":3},"end":{"line":208,"column":38}},"77":{"start":{"line":216,"column":3},"end":{"line":222,"column":4}},"78":{"start":{"line":219,"column":4},"end":{"line":221,"column":46}},"79":{"start":{"line":224,"column":3},"end":{"line":288,"column":4}},"80":{"start":{"line":225,"column":4},"end":{"line":225,"column":33}},"81":{"start":{"line":227,"column":4},"end":{"line":227,"column":22}},"82":{"start":{"line":231,"column":4},"end":{"line":238,"column":7}},"83":{"start":{"line":240,"column":4},"end":{"line":245,"column":5}},"84":{"start":{"line":242,"column":5},"end":{"line":242,"column":44}},"85":{"start":{"line":244,"column":5},"end":{"line":244,"column":20}},"86":{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},"87":{"start":{"line":252,"column":5},"end":{"line":252,"column":26}},"88":{"start":{"line":261,"column":4},"end":{"line":263,"column":5}},"89":{"start":{"line":262,"column":5},"end":{"line":262,"column":73}},"90":{"start":{"line":272,"column":4},"end":{"line":274,"column":5}},"91":{"start":{"line":273,"column":5},"end":{"line":273,"column":37}},"92":{"start":{"line":283,"column":4},"end":{"line":286,"column":5}},"93":{"start":{"line":284,"column":5},"end":{"line":284,"column":21}},"94":{"start":{"line":285,"column":5},"end":{"line":285,"column":34}},"95":{"start":{"line":290,"column":3},"end":{"line":290,"column":34}},"96":{"start":{"line":300,"column":3},"end":{"line":300,"column":24}},"97":{"start":{"line":302,"column":3},"end":{"line":302,"column":18}},"98":{"start":{"line":303,"column":3},"end":{"line":303,"column":29}},"99":{"start":{"line":305,"column":3},"end":{"line":305,"column":33}},"100":{"start":{"line":307,"column":3},"end":{"line":316,"column":5}},"101":{"start":{"line":309,"column":5},"end":{"line":309,"column":51}},"102":{"start":{"line":312,"column":5},"end":{"line":314,"column":6}},"103":{"start":{"line":313,"column":6},"end":{"line":313,"column":23}},"104":{"start":{"line":325,"column":3},"end":{"line":325,"column":32}},"105":{"start":{"line":326,"column":3},"end":{"line":326,"column":38}},"106":{"start":{"line":337,"column":1},"end":{"line":357,"column":3}},"107":{"start":{"line":338,"column":2},"end":{"line":340,"column":3}},"108":{"start":{"line":339,"column":3},"end":{"line":339,"column":10}},"109":{"start":{"line":342,"column":2},"end":{"line":342,"column":23}},"110":{"start":{"line":344,"column":2},"end":{"line":344,"column":31}},"111":{"start":{"line":346,"column":2},"end":{"line":348,"column":3}},"112":{"start":{"line":347,"column":3},"end":{"line":347,"column":77}},"113":{"start":{"line":350,"column":2},"end":{"line":350,"column":29}},"114":{"start":{"line":351,"column":2},"end":{"line":354,"column":3}},"115":{"start":{"line":352,"column":3},"end":{"line":352,"column":45}},"116":{"start":{"line":353,"column":3},"end":{"line":353,"column":40}},"117":{"start":{"line":356,"column":2},"end":{"line":356,"column":17}},"118":{"start":{"line":367,"column":1},"end":{"line":379,"column":2}},"119":{"start":{"line":368,"column":2},"end":{"line":368,"column":30}},"120":{"start":{"line":370,"column":2},"end":{"line":370,"column":26}},"121":{"start":{"line":372,"column":2},"end":{"line":372,"column":25}},"122":{"start":{"line":373,"column":2},"end":{"line":373,"column":33}},"123":{"start":{"line":375,"column":2},"end":{"line":375,"column":53}},"124":{"start":{"line":377,"column":2},"end":{"line":377,"column":33}},"125":{"start":{"line":381,"column":1},"end":{"line":385,"column":2}},"126":{"start":{"line":382,"column":2},"end":{"line":382,"column":44}},"127":{"start":{"line":384,"column":2},"end":{"line":384,"column":40}},"128":{"start":{"line":387,"column":1},"end":{"line":399,"column":2}},"129":{"start":{"line":388,"column":2},"end":{"line":388,"column":28}},"130":{"start":{"line":390,"column":2},"end":{"line":390,"column":16}},"131":{"start":{"line":391,"column":2},"end":{"line":391,"column":8}},"132":{"start":{"line":393,"column":2},"end":{"line":396,"column":3}},"133":{"start":{"line":394,"column":3},"end":{"line":394,"column":48}},"134":{"start":{"line":395,"column":3},"end":{"line":395,"column":33}},"135":{"start":{"line":398,"column":2},"end":{"line":398,"column":33}},"136":{"start":{"line":401,"column":1},"end":{"line":414,"column":2}},"137":{"start":{"line":402,"column":2},"end":{"line":402,"column":20}},"138":{"start":{"line":404,"column":2},"end":{"line":411,"column":3}},"139":{"start":{"line":407,"column":3},"end":{"line":410,"column":4}},"140":{"start":{"line":409,"column":4},"end":{"line":409,"column":56}},"141":{"start":{"line":413,"column":2},"end":{"line":413,"column":33}},"142":{"start":{"line":416,"column":1},"end":{"line":424,"column":2}},"143":{"start":{"line":417,"column":2},"end":{"line":423,"column":4}},"144":{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},"145":{"start":{"line":420,"column":5},"end":{"line":420,"column":26}},"146":{"start":{"line":427,"column":1},"end":{"line":439,"column":2}},"147":{"start":{"line":428,"column":2},"end":{"line":438,"column":4}},"148":{"start":{"line":429,"column":3},"end":{"line":429,"column":19}},"149":{"start":{"line":431,"column":3},"end":{"line":437,"column":4}},"150":{"start":{"line":432,"column":4},"end":{"line":432,"column":26}},"151":{"start":{"line":433,"column":4},"end":{"line":433,"column":32}},"152":{"start":{"line":435,"column":4},"end":{"line":435,"column":30}},"153":{"start":{"line":436,"column":4},"end":{"line":436,"column":40}},"154":{"start":{"line":446,"column":1},"end":{"line":464,"column":2}},"155":{"start":{"line":447,"column":2},"end":{"line":447,"column":34}},"156":{"start":{"line":449,"column":2},"end":{"line":463,"column":3}},"157":{"start":{"line":450,"column":3},"end":{"line":450,"column":31}},"158":{"start":{"line":452,"column":3},"end":{"line":462,"column":4}},"159":{"start":{"line":453,"column":4},"end":{"line":453,"column":37}},"160":{"start":{"line":454,"column":4},"end":{"line":456,"column":5}},"161":{"start":{"line":455,"column":5},"end":{"line":455,"column":43}},"162":{"start":{"line":458,"column":4},"end":{"line":461,"column":7}},"163":{"start":{"line":473,"column":1},"end":{"line":494,"column":2}},"164":{"start":{"line":474,"column":2},"end":{"line":474,"column":37}},"165":{"start":{"line":476,"column":2},"end":{"line":476,"column":16}},"166":{"start":{"line":478,"column":2},"end":{"line":491,"column":3}},"167":{"start":{"line":479,"column":3},"end":{"line":479,"column":36}},"168":{"start":{"line":480,"column":3},"end":{"line":490,"column":4}},"169":{"start":{"line":481,"column":4},"end":{"line":481,"column":32}},"170":{"start":{"line":483,"column":4},"end":{"line":489,"column":5}},"171":{"start":{"line":484,"column":5},"end":{"line":488,"column":6}},"172":{"start":{"line":485,"column":6},"end":{"line":485,"column":27}},"173":{"start":{"line":486,"column":6},"end":{"line":486,"column":18}},"174":{"start":{"line":487,"column":6},"end":{"line":487,"column":12}},"175":{"start":{"line":493,"column":2},"end":{"line":493,"column":19}},"176":{"start":{"line":496,"column":1},"end":{"line":510,"column":2}},"177":{"start":{"line":497,"column":2},"end":{"line":505,"column":3}},"178":{"start":{"line":499,"column":3},"end":{"line":502,"column":6}},"179":{"start":{"line":507,"column":2},"end":{"line":507,"column":26}},"180":{"start":{"line":509,"column":2},"end":{"line":509,"column":18}},"181":{"start":{"line":512,"column":1},"end":{"line":513,"column":79}},"182":{"start":{"line":518,"column":1},"end":{"line":518,"column":21}},"183":{"start":{"line":520,"column":1},"end":{"line":520,"column":27}},"184":{"start":{"line":521,"column":1},"end":{"line":521,"column":22}},"185":{"start":{"line":522,"column":1},"end":{"line":522,"column":19}},"186":{"start":{"line":523,"column":1},"end":{"line":523,"column":20}},"187":{"start":{"line":525,"column":1},"end":{"line":527,"column":3}},"188":{"start":{"line":526,"column":2},"end":{"line":526,"column":64}},"189":{"start":{"line":531,"column":1},"end":{"line":535,"column":3}},"190":{"start":{"line":534,"column":2},"end":{"line":534,"column":31}},"191":{"start":{"line":537,"column":1},"end":{"line":546,"column":7}},"192":{"start":{"line":539,"column":3},"end":{"line":539,"column":18}},"193":{"start":{"line":540,"column":3},"end":{"line":545,"column":5}},"194":{"start":{"line":541,"column":4},"end":{"line":541,"column":24}},"195":{"start":{"line":542,"column":4},"end":{"line":542,"column":27}},"196":{"start":{"line":543,"column":4},"end":{"line":543,"column":23}},"197":{"start":{"line":544,"column":4},"end":{"line":544,"column":20}},"198":{"start":{"line":548,"column":1},"end":{"line":552,"column":3}},"199":{"start":{"line":557,"column":1},"end":{"line":561,"column":12}},"200":{"start":{"line":563,"column":1},"end":{"line":567,"column":2}},"201":{"start":{"line":564,"column":2},"end":{"line":566,"column":3}},"202":{"start":{"line":565,"column":3},"end":{"line":565,"column":18}},"203":{"start":{"line":569,"column":1},"end":{"line":573,"column":2}},"204":{"start":{"line":570,"column":2},"end":{"line":572,"column":3}},"205":{"start":{"line":571,"column":3},"end":{"line":571,"column":18}},"206":{"start":{"line":575,"column":1},"end":{"line":577,"column":2}},"207":{"start":{"line":576,"column":2},"end":{"line":576,"column":26}},"208":{"start":{"line":579,"column":1},"end":{"line":582,"column":2}},"209":{"start":{"line":580,"column":2},"end":{"line":580,"column":40}},"210":{"start":{"line":581,"column":2},"end":{"line":581,"column":41}},"211":{"start":{"line":584,"column":1},"end":{"line":586,"column":2}},"212":{"start":{"line":585,"column":2},"end":{"line":585,"column":49}},"213":{"start":{"line":588,"column":1},"end":{"line":592,"column":2}},"214":{"start":{"line":589,"column":2},"end":{"line":591,"column":37}},"215":{"start":{"line":590,"column":3},"end":{"line":590,"column":52}},"216":{"start":{"line":594,"column":1},"end":{"line":594,"column":13}},"217":{"start":{"line":597,"column":77},"end":{"line":597,"column":104}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":3},"end":{"line":61,"column":3}},{"start":{"line":61,"column":3},"end":{"line":61,"column":3}}]},"3":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"4":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":5},"end":{"line":67,"column":5}},{"start":{"line":67,"column":5},"end":{"line":67,"column":5}}]},"5":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":11},"end":{"line":71,"column":11}},{"start":{"line":71,"column":11},"end":{"line":71,"column":11}}]},"6":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":3},"end":{"line":101,"column":3}},{"start":{"line":101,"column":3},"end":{"line":101,"column":3}}]},"7":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"8":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":3},"end":{"line":184,"column":3}},{"start":{"line":184,"column":3},"end":{"line":184,"column":3}}]},"9":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":10}},{"start":{"line":192,"column":14},"end":{"line":192,"column":41}}]},"10":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":19},"end":{"line":208,"column":33}},{"start":{"line":208,"column":36},"end":{"line":208,"column":37}}]},"11":{"line":219,"type":"cond-expr","locations":[{"start":{"line":220,"column":7},"end":{"line":220,"column":26}},{"start":{"line":221,"column":7},"end":{"line":221,"column":45}}]},"12":{"line":262,"type":"cond-expr","locations":[{"start":{"line":262,"column":43},"end":{"line":262,"column":64}},{"start":{"line":262,"column":67},"end":{"line":262,"column":71}}]},"13":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":20},"end":{"line":273,"column":27}},{"start":{"line":273,"column":31},"end":{"line":273,"column":35}}]},"14":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":5},"end":{"line":312,"column":5}},{"start":{"line":312,"column":5},"end":{"line":312,"column":5}}]},"15":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":2},"end":{"line":338,"column":2}},{"start":{"line":338,"column":2},"end":{"line":338,"column":2}}]},"16":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":2},"end":{"line":346,"column":2}},{"start":{"line":346,"column":2},"end":{"line":346,"column":2}}]},"17":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":2},"end":{"line":351,"column":2}},{"start":{"line":351,"column":2},"end":{"line":351,"column":2}}]},"18":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":9},"end":{"line":370,"column":18}},{"start":{"line":370,"column":22},"end":{"line":370,"column":25}}]},"19":{"line":384,"type":"binary-expr","locations":[{"start":{"line":384,"column":9},"end":{"line":384,"column":16}},{"start":{"line":384,"column":20},"end":{"line":384,"column":39}}]},"20":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":3},"end":{"line":395,"column":8}},{"start":{"line":395,"column":12},"end":{"line":395,"column":32}}]},"21":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":3},"end":{"line":407,"column":3}},{"start":{"line":407,"column":3},"end":{"line":407,"column":3}}]},"22":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":7},"end":{"line":407,"column":37}},{"start":{"line":407,"column":41},"end":{"line":407,"column":57}}]},"23":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":3},"end":{"line":431,"column":3}},{"start":{"line":431,"column":3},"end":{"line":431,"column":3}}]},"24":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":3},"end":{"line":452,"column":3}},{"start":{"line":452,"column":3},"end":{"line":452,"column":3}}]},"25":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":4},"end":{"line":454,"column":4}},{"start":{"line":454,"column":4},"end":{"line":454,"column":4}}]},"26":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":3},"end":{"line":480,"column":3}},{"start":{"line":480,"column":3},"end":{"line":480,"column":3}}]},"27":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":5},"end":{"line":484,"column":5}},{"start":{"line":484,"column":5},"end":{"line":484,"column":5}}]},"28":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":11},"end":{"line":525,"column":24}},{"start":{"line":525,"column":28},"end":{"line":527,"column":2}}]},"29":{"line":531,"type":"cond-expr","locations":[{"start":{"line":532,"column":4},"end":{"line":532,"column":25}},{"start":{"line":533,"column":4},"end":{"line":535,"column":2}}]},"30":{"line":537,"type":"binary-expr","locations":[{"start":{"line":537,"column":16},"end":{"line":537,"column":29}},{"start":{"line":538,"column":3},"end":{"line":546,"column":5}}]},"31":{"line":597,"type":"cond-expr","locations":[{"start":{"line":597,"column":47},"end":{"line":597,"column":53}},{"start":{"line":597,"column":56},"end":{"line":597,"column":106}}]},"32":{"line":597,"type":"binary-expr","locations":[{"start":{"line":597,"column":3},"end":{"line":597,"column":30}},{"start":{"line":597,"column":34},"end":{"line":597,"column":44}}]}},"code":["/** @license MIT License (c) copyright 2011-2013 original author or authors */","","/**"," * meld"," * Aspect Oriented Programming for Javascript"," *"," * meld is part of the cujo.js family of libraries (http://cujojs.com/)"," *"," * Licensed under the MIT License at:"," * http://www.opensource.org/licenses/mit-license.php"," *"," * @author Brian Cavalier"," * @author John Hann"," * @version 1.3.1"," */","(function (define) {","define(function () {","","\t//","\t// Public API","\t//","","\t// Add a single, specific type of advice","\t// returns a function that will remove the newly-added advice","\tmeld.before =         adviceApi('before');","\tmeld.around =         adviceApi('around');","\tmeld.on =             adviceApi('on');","\tmeld.afterReturning = adviceApi('afterReturning');","\tmeld.afterThrowing =  adviceApi('afterThrowing');","\tmeld.after =          adviceApi('after');","","\t// Access to the current joinpoint in advices","\tmeld.joinpoint =      joinpoint;","","\t// DEPRECATED: meld.add(). Use meld() instead","\t// Returns a function that will remove the newly-added aspect","\tmeld.add =            function() { return meld.apply(null, arguments); };","","\t/**","\t * Add an aspect to all matching methods of target, or to target itself if","\t * target is a function and no pointcut is provided.","\t * @param {object|function} target","\t * @param {string|array|RegExp|function} [pointcut]","\t * @param {object} aspect","\t * @param {function?} aspect.before","\t * @param {function?} aspect.on","\t * @param {function?} aspect.around","\t * @param {function?} aspect.afterReturning","\t * @param {function?} aspect.afterThrowing","\t * @param {function?} aspect.after","\t * @returns {{ remove: function }|function} if target is an object, returns a","\t *  remover { remove: function } whose remove method will remove the added","\t *  aspect. If target is a function, returns the newly advised function.","\t */","\tfunction meld(target, pointcut, aspect) {","\t\tvar pointcutType, remove;","","\t\tif(arguments.length < 3) {","\t\t\treturn addAspectToFunction(target, pointcut);","\t\t} else {","\t\t\tif (isArray(pointcut)) {","\t\t\t\tremove = addAspectToAll(target, pointcut, aspect);","\t\t\t} else {","\t\t\t\tpointcutType = typeof pointcut;","","\t\t\t\tif (pointcutType === 'string') {","\t\t\t\t\tif (typeof target[pointcut] === 'function') {","\t\t\t\t\t\tremove = addAspectToMethod(target, pointcut, aspect);","\t\t\t\t\t}","","\t\t\t\t} else if (pointcutType === 'function') {","\t\t\t\t\tremove = addAspectToAll(target, pointcut(target), aspect);","","\t\t\t\t} else {","\t\t\t\t\tremove = addAspectToMatches(target, pointcut, aspect);","\t\t\t\t}","\t\t\t}","","\t\t\treturn remove;","\t\t}","","\t}","","\tfunction Advisor(target, func) {","","\t\tvar orig, advisor, advised;","","\t\tthis.target = target;","\t\tthis.func = func;","\t\tthis.aspects = {};","","\t\torig = this.orig = target[func];","\t\tadvisor = this;","","\t\tadvised = this.advised = function() {","\t\t\tvar context, joinpoint, args, callOrig, afterType;","","\t\t\t// If called as a constructor (i.e. using \"new\"), create a context","\t\t\t// of the correct type, so that all advice types (including before!)","\t\t\t// are called with the correct context.","\t\t\tif(this instanceof advised) {","\t\t\t\t// shamelessly derived from https://github.com/cujojs/wire/blob/c7c55fe50238ecb4afbb35f902058ab6b32beb8f/lib/component.js#L25","\t\t\t\tcontext = objectCreate(orig.prototype);","\t\t\t\tcallOrig = function (args) {","\t\t\t\t\treturn applyConstructor(orig, context, args);","\t\t\t\t};","","\t\t\t} else {","\t\t\t\tcontext = this;","\t\t\t\tcallOrig = function(args) {","\t\t\t\t\treturn orig.apply(context, args);","\t\t\t\t};","","\t\t\t}","","\t\t\targs = slice.call(arguments);","\t\t\tafterType = 'afterReturning';","","\t\t\t// Save the previous joinpoint and set the current joinpoint","\t\t\tjoinpoint = pushJoinpoint({","\t\t\t\ttarget: context,","\t\t\t\tmethod: func,","\t\t\t\targs: args","\t\t\t});","","\t\t\ttry {","\t\t\t\tadvisor._callSimpleAdvice('before', context, args);","","\t\t\t\ttry {","\t\t\t\t\tjoinpoint.result = advisor._callAroundAdvice(context, func, args, callOrigAndOn);","\t\t\t\t} catch(e) {","\t\t\t\t\tjoinpoint.result = joinpoint.exception = e;","\t\t\t\t\t// Switch to afterThrowing","\t\t\t\t\tafterType = 'afterThrowing';","\t\t\t\t}","","\t\t\t\targs = [joinpoint.result];","","\t\t\t\tcallAfter(afterType, args);","\t\t\t\tcallAfter('after', args);","","\t\t\t\tif(joinpoint.exception) {","\t\t\t\t\tthrow joinpoint.exception;","\t\t\t\t}","","\t\t\t\treturn joinpoint.result;","","\t\t\t} finally {","\t\t\t\t// Restore the previous joinpoint, if necessary.","\t\t\t\tpopJoinpoint();","\t\t\t}","","\t\t\tfunction callOrigAndOn(args) {","\t\t\t\tvar result = callOrig(args);","\t\t\t\tadvisor._callSimpleAdvice('on', context, args);","","\t\t\t\treturn result;","\t\t\t}","","\t\t\tfunction callAfter(afterType, args) {","\t\t\t\tadvisor._callSimpleAdvice(afterType, context, args);","\t\t\t}","\t\t};","","\t\tdefineProperty(advised, '_advisor', { value: advisor, configurable: true });","\t}","","\tAdvisor.prototype = {","","\t\t/**","\t\t * Invoke all advice functions in the supplied context, with the supplied args","\t\t *","\t\t * @param adviceType","\t\t * @param context","\t\t * @param args","\t\t */","\t\t_callSimpleAdvice: function(adviceType, context, args) {","","\t\t\t// before advice runs LIFO, from most-recently added to least-recently added.","\t\t\t// All other advice is FIFO","\t\t\tvar iterator, advices;","","\t\t\tadvices = this.aspects[adviceType];","\t\t\tif(!advices) {","\t\t\t\treturn;","\t\t\t}","","\t\t\titerator = iterators[adviceType];","","\t\t\titerator(this.aspects[adviceType], function(aspect) {","\t\t\t\tvar advice = aspect.advice;","\t\t\t\tadvice && advice.apply(context, args);","\t\t\t});","\t\t},","","\t\t/**","\t\t * Invoke all around advice and then the original method","\t\t *","\t\t * @param context","\t\t * @param method","\t\t * @param args","\t\t * @param applyOriginal","\t\t */","\t\t_callAroundAdvice: function (context, method, args, applyOriginal) {","\t\t\tvar len, aspects;","","\t\t\taspects = this.aspects.around;","\t\t\tlen = aspects ? aspects.length : 0;","","\t\t\t/**","\t\t\t * Call the next function in the around chain, which will either be another around","\t\t\t * advice, or the orig method.","\t\t\t * @param i {Number} index of the around advice","\t\t\t * @param args {Array} arguments with with to call the next around advice","\t\t\t */","\t\t\tfunction callNext(i, args) {","\t\t\t\t// If we exhausted all aspects, finally call the original","\t\t\t\t// Otherwise, if we found another around, call it","\t\t\t\treturn i < 0","\t\t\t\t\t? applyOriginal(args)","\t\t\t\t\t: callAround(aspects[i].advice, i, args);","\t\t\t}","","\t\t\tfunction callAround(around, i, args) {","\t\t\t\tvar proceedCalled, joinpoint;","","\t\t\t\tproceedCalled = 0;","","\t\t\t\t// Joinpoint is immutable","\t\t\t\t// TODO: Use Object.freeze once v8 perf problem is fixed","\t\t\t\tjoinpoint = pushJoinpoint({","\t\t\t\t\ttarget: context,","\t\t\t\t\tmethod: method,","\t\t\t\t\targs: args,","\t\t\t\t\tproceed: proceedCall,","\t\t\t\t\tproceedApply: proceedApply,","\t\t\t\t\tproceedCount: proceedCount","\t\t\t\t});","","\t\t\t\ttry {","\t\t\t\t\t// Call supplied around advice function","\t\t\t\t\treturn around.call(context, joinpoint);","\t\t\t\t} finally {","\t\t\t\t\tpopJoinpoint();","\t\t\t\t}","","\t\t\t\t/**","\t\t\t\t * The number of times proceed() has been called","\t\t\t\t * @return {Number}","\t\t\t\t */","\t\t\t\tfunction proceedCount() {","\t\t\t\t\treturn proceedCalled;","\t\t\t\t}","","\t\t\t\t/**","\t\t\t\t * Proceed to the original method/function or the next around","\t\t\t\t * advice using original arguments or new argument list if","\t\t\t\t * arguments.length > 0","\t\t\t\t * @return {*} result of original method/function or next around advice","\t\t\t\t */","\t\t\t\tfunction proceedCall(/* newArg1, newArg2... */) {","\t\t\t\t\treturn proceed(arguments.length > 0 ? slice.call(arguments) : args);","\t\t\t\t}","","\t\t\t\t/**","\t\t\t\t * Proceed to the original method/function or the next around","\t\t\t\t * advice using original arguments or new argument list if","\t\t\t\t * newArgs is supplied","\t\t\t\t * @param [newArgs] {Array} new arguments with which to proceed","\t\t\t\t * @return {*} result of original method/function or next around advice","\t\t\t\t */","\t\t\t\tfunction proceedApply(newArgs) {","\t\t\t\t\treturn proceed(newArgs || args);","\t\t\t\t}","","\t\t\t\t/**","\t\t\t\t * Create proceed function that calls the next around advice, or","\t\t\t\t * the original.  May be called multiple times, for example, in retry","\t\t\t\t * scenarios","\t\t\t\t * @param [args] {Array} optional arguments to use instead of the","\t\t\t\t * original arguments","\t\t\t\t */","\t\t\t\tfunction proceed(args) {","\t\t\t\t\tproceedCalled++;","\t\t\t\t\treturn callNext(i - 1, args);","\t\t\t\t}","","\t\t\t}","","\t\t\treturn callNext(len - 1, args);","\t\t},","","\t\t/**","\t\t * Adds the supplied aspect to the advised target method","\t\t *","\t\t * @param aspect","\t\t */","\t\tadd: function(aspect) {","","\t\t\tvar advisor, aspects;","","\t\t\tadvisor = this;","\t\t\taspects = advisor.aspects;","","\t\t\tinsertAspect(aspects, aspect);","","\t\t\treturn {","\t\t\t\tremove: function () {","\t\t\t\t\tvar remaining = removeAspect(aspects, aspect);","","\t\t\t\t\t// If there are no aspects left, restore the original method","\t\t\t\t\tif (!remaining) {","\t\t\t\t\t\tadvisor.remove();","\t\t\t\t\t}","\t\t\t\t}","\t\t\t};","\t\t},","","\t\t/**","\t\t * Removes the Advisor and thus, all aspects from the advised target method, and","\t\t * restores the original target method, copying back all properties that may have","\t\t * been added or updated on the advised function.","\t\t */","\t\tremove: function () {","\t\t\tdelete this.advised._advisor;","\t\t\tthis.target[this.func] = this.orig;","\t\t}","\t};","","\t/**","\t * Returns the advisor for the target object-function pair.  A new advisor","\t * will be created if one does not already exist.","\t * @param target {*} target containing a method with the supplied methodName","\t * @param methodName {String} name of method on target for which to get an advisor","\t * @return {Object|undefined} existing or newly created advisor for the supplied method","\t */","\tAdvisor.get = function(target, methodName) {","\t\tif(!(methodName in target)) {","\t\t\treturn;","\t\t}","","\t\tvar advisor, advised;","","\t\tadvised = target[methodName];","","\t\tif(typeof advised !== 'function') {","\t\t\tthrow new Error('Advice can only be applied to functions: ' + methodName);","\t\t}","","\t\tadvisor = advised._advisor;","\t\tif(!advisor) {","\t\t\tadvisor = new Advisor(target, methodName);","\t\t\ttarget[methodName] = advisor.advised;","\t\t}","","\t\treturn advisor;","\t};","","\t/**","\t * Add an aspect to a pure function, returning an advised version of it.","\t * NOTE: *only the returned function* is advised.  The original (input) function","\t * is not modified in any way.","\t * @param func {Function} function to advise","\t * @param aspect {Object} aspect to add","\t * @return {Function} advised function","\t */","\tfunction addAspectToFunction(func, aspect) {","\t\tvar name, placeholderTarget;","","\t\tname = func.name || '_';","","\t\tplaceholderTarget = {};","\t\tplaceholderTarget[name] = func;","","\t\taddAspectToMethod(placeholderTarget, name, aspect);","","\t\treturn placeholderTarget[name];","","\t}","","\tfunction addAspectToMethod(target, method, aspect) {","\t\tvar advisor = Advisor.get(target, method);","","\t\treturn advisor && advisor.add(aspect);","\t}","","\tfunction addAspectToAll(target, methodArray, aspect) {","\t\tvar removers, added, f, i;","","\t\tremovers = [];","\t\ti = 0;","","\t\twhile((f = methodArray[i++])) {","\t\t\tadded = addAspectToMethod(target, f, aspect);","\t\t\tadded && removers.push(added);","\t\t}","","\t\treturn createRemover(removers);","\t}","","\tfunction addAspectToMatches(target, pointcut, aspect) {","\t\tvar removers = [];","\t\t// Assume the pointcut is a an object with a .test() method","\t\tfor (var p in target) {","\t\t\t// TODO: Decide whether hasOwnProperty is correct here","\t\t\t// Only apply to own properties that are functions, and match the pointcut regexp","\t\t\tif (typeof target[p] == 'function' && pointcut.test(p)) {","\t\t\t\t// if(object.hasOwnProperty(p) && typeof object[p] === 'function' && pointcut.test(p)) {","\t\t\t\tremovers.push(addAspectToMethod(target, p, aspect));","\t\t\t}","\t\t}","","\t\treturn createRemover(removers);","\t}","","\tfunction createRemover(removers) {","\t\treturn {","\t\t\tremove: function() {","\t\t\t\tfor (var i = removers.length - 1; i >= 0; --i) {","\t\t\t\t\tremovers[i].remove();","\t\t\t\t}","\t\t\t}","\t\t};","\t}","","\t// Create an API function for the specified advice type","\tfunction adviceApi(type) {","\t\treturn function(target, method, adviceFunc) {","\t\t\tvar aspect = {};","","\t\t\tif(arguments.length === 2) {","\t\t\t\taspect[type] = method;","\t\t\t\treturn meld(target, aspect);","\t\t\t} else {","\t\t\t\taspect[type] = adviceFunc;","\t\t\t\treturn meld(target, method, aspect);","\t\t\t}","\t\t};","\t}","","\t/**","\t * Insert the supplied aspect into aspectList","\t * @param aspectList {Object} list of aspects, categorized by advice type","\t * @param aspect {Object} aspect containing one or more supported advice types","\t */","\tfunction insertAspect(aspectList, aspect) {","\t\tvar adviceType, advice, advices;","","\t\tfor(adviceType in iterators) {","\t\t\tadvice = aspect[adviceType];","","\t\t\tif(advice) {","\t\t\t\tadvices = aspectList[adviceType];","\t\t\t\tif(!advices) {","\t\t\t\t\taspectList[adviceType] = advices = [];","\t\t\t\t}","","\t\t\t\tadvices.push({","\t\t\t\t\taspect: aspect,","\t\t\t\t\tadvice: advice","\t\t\t\t});","\t\t\t}","\t\t}","\t}","","\t/**","\t * Remove the supplied aspect from aspectList","\t * @param aspectList {Object} list of aspects, categorized by advice type","\t * @param aspect {Object} aspect containing one or more supported advice types","\t * @return {Number} Number of *advices* left on the advised function.  If","\t *  this returns zero, then it is safe to remove the advisor completely.","\t */","\tfunction removeAspect(aspectList, aspect) {","\t\tvar adviceType, advices, remaining;","","\t\tremaining = 0;","","\t\tfor(adviceType in iterators) {","\t\t\tadvices = aspectList[adviceType];","\t\t\tif(advices) {","\t\t\t\tremaining += advices.length;","","\t\t\t\tfor (var i = advices.length - 1; i >= 0; --i) {","\t\t\t\t\tif (advices[i].aspect === aspect) {","\t\t\t\t\t\tadvices.splice(i, 1);","\t\t\t\t\t\t--remaining;","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn remaining;","\t}","","\tfunction applyConstructor(C, instance, args) {","\t\ttry {","\t\t\t// Try to define a constructor, but don't care if it fails","\t\t\tdefineProperty(instance, 'constructor', {","\t\t\t\tvalue: C,","\t\t\t\tenumerable: false","\t\t\t});","\t\t} catch(e) {","\t\t\t// ignore","\t\t}","","\t\tC.apply(instance, args);","","\t\treturn instance;","\t}","","\tvar currentJoinpoint, joinpointStack,","\t\tap, prepend, append, iterators, slice, isArray, defineProperty, objectCreate;","","\t// TOOD: Freeze joinpoints when v8 perf problems are resolved","//\tfreeze = Object.freeze || function (o) { return o; };","","\tjoinpointStack = [];","","\tap      = Array.prototype;","\tprepend = ap.unshift;","\tappend  = ap.push;","\tslice   = ap.slice;","","\tisArray = Array.isArray || function(it) {","\t\treturn Object.prototype.toString.call(it) == '[object Array]';","\t};","","\t// Check for a *working* Object.defineProperty, fallback to","\t// simple assignment.","\tdefineProperty = definePropertyWorks()","\t\t? Object.defineProperty","\t\t: function(obj, prop, descriptor) {","\t\tobj[prop] = descriptor.value;","\t};","","\tobjectCreate = Object.create ||","\t\t(function() {","\t\t\tfunction F() {}","\t\t\treturn function(proto) {","\t\t\t\tF.prototype = proto;","\t\t\t\tvar instance = new F();","\t\t\t\tF.prototype = null;","\t\t\t\treturn instance;","\t\t\t};","\t\t}());","","\titerators = {","\t\t// Before uses reverse iteration","\t\tbefore: forEachReverse,","\t\taround: false","\t};","","\t// All other advice types use forward iteration","\t// Around is a special case that uses recursion rather than","\t// iteration.  See Advisor._callAroundAdvice","\titerators.on","\t\t= iterators.afterReturning","\t\t= iterators.afterThrowing","\t\t= iterators.after","\t\t= forEach;","","\tfunction forEach(array, func) {","\t\tfor (var i = 0, len = array.length; i < len; i++) {","\t\t\tfunc(array[i]);","\t\t}","\t}","","\tfunction forEachReverse(array, func) {","\t\tfor (var i = array.length - 1; i >= 0; --i) {","\t\t\tfunc(array[i]);","\t\t}","\t}","","\tfunction joinpoint() {","\t\treturn currentJoinpoint;","\t}","","\tfunction pushJoinpoint(newJoinpoint) {","\t\tjoinpointStack.push(currentJoinpoint);","\t\treturn currentJoinpoint = newJoinpoint;","\t}","","\tfunction popJoinpoint() {","\t\treturn currentJoinpoint = joinpointStack.pop();","\t}","","\tfunction definePropertyWorks() {","\t\ttry {","\t\t\treturn 'x' in Object.defineProperty({}, 'x', {});","\t\t} catch (e) { /* return falsey */ }","\t}","","\treturn meld;","","});","})(typeof define == 'function' && define.amd ? define : function (factory) { module.exports = factory(); }",");",""],"l":{"16":1,"17":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"33":1,"37":1,"55":1,"56":0,"58":0,"59":0,"61":0,"62":0,"64":0,"66":0,"67":0,"68":0,"71":0,"72":0,"75":0,"79":0,"84":1,"86":0,"88":0,"89":0,"90":0,"92":0,"93":0,"95":0,"96":0,"101":0,"103":0,"104":0,"105":0,"109":0,"110":0,"111":0,"116":0,"117":0,"120":0,"126":0,"127":0,"129":0,"130":0,"132":0,"134":0,"137":0,"139":0,"140":0,"142":0,"143":0,"146":0,"150":0,"153":1,"154":0,"155":0,"157":0,"160":1,"161":0,"165":0,"168":1,"181":0,"183":0,"184":0,"185":0,"188":0,"190":0,"191":0,"192":0,"205":0,"207":0,"208":0,"216":1,"219":0,"224":1,"225":0,"227":0,"231":0,"240":0,"242":0,"244":0,"251":1,"252":0,"261":1,"262":0,"272":1,"273":0,"283":1,"284":0,"285":0,"290":0,"300":0,"302":0,"303":0,"305":0,"307":0,"309":0,"312":0,"313":0,"325":0,"326":0,"337":1,"338":0,"339":0,"342":0,"344":0,"346":0,"347":0,"350":0,"351":0,"352":0,"353":0,"356":0,"367":1,"368":0,"370":0,"372":0,"373":0,"375":0,"377":0,"381":1,"382":0,"384":0,"387":1,"388":0,"390":0,"391":0,"393":0,"394":0,"395":0,"398":0,"401":1,"402":0,"404":0,"407":0,"409":0,"413":0,"416":1,"417":0,"419":0,"420":0,"427":1,"428":6,"429":0,"431":0,"432":0,"433":0,"435":0,"436":0,"446":1,"447":0,"449":0,"450":0,"452":0,"453":0,"454":0,"455":0,"458":0,"473":1,"474":0,"476":0,"478":0,"479":0,"480":0,"481":0,"483":0,"484":0,"485":0,"486":0,"487":0,"493":0,"496":1,"497":0,"499":0,"507":0,"509":0,"512":1,"518":1,"520":1,"521":1,"522":1,"523":1,"525":1,"526":0,"531":1,"534":0,"537":1,"539":1,"540":0,"541":0,"542":0,"543":0,"544":0,"548":1,"557":1,"563":1,"564":0,"565":0,"569":1,"570":0,"571":0,"575":1,"576":0,"579":1,"580":0,"581":0,"584":1,"585":0,"588":1,"589":1,"590":1,"594":1,"597":1}},"/home/travis/build/npmtest/node-npmtest-meld/node_modules/meld/aspect/cache.js":{"path":"/home/travis/build/npmtest/node-npmtest-meld/node_modules/meld/aspect/cache.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0],"3":[0,1],"4":[1,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":1},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":1},"end":{"line":10,"column":18}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":7},"end":{"line":11,"column":18}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":38}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":31}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":56},"end":{"line":50,"column":74}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":50,"column":108}},"2":{"start":{"line":11,"column":0},"end":{"line":49,"column":3}},"3":{"start":{"line":26,"column":1},"end":{"line":47,"column":3}},"4":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"5":{"start":{"line":28,"column":3},"end":{"line":28,"column":33}},"6":{"start":{"line":31,"column":2},"end":{"line":46,"column":4}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":20}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":39}},"9":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"10":{"start":{"line":38,"column":5},"end":{"line":38,"column":29}},"11":{"start":{"line":40,"column":5},"end":{"line":40,"column":34}},"12":{"start":{"line":41,"column":5},"end":{"line":41,"column":28}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":18}},"14":{"start":{"line":50,"column":76},"end":{"line":50,"column":103}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":47},"end":{"line":50,"column":53}},{"start":{"line":50,"column":56},"end":{"line":50,"column":105}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":30}},{"start":{"line":50,"column":34},"end":{"line":50,"column":44}}]}},"code":["/** @license MIT License (c) copyright 2011-2013 original author or authors */","","/**"," * Caching aspect"," * Requires JSON.stringify. See cujojs/poly if you need a JSON polyfill"," *"," * @author Brian Cavalier"," * @author John Hann"," */","(function(define) {","define(function() {","\t/**","\t * Creates a new caching aspect that uses the supplied cache","\t * to store values using keys generated by the supplied keyGenerator.","\t *","\t * Requires JSON.stringify. See cujojs/poly if you need a JSON polyfill","\t *","\t * @param {object} cache","\t * @param {function} cache.has returns true if a supplied key exists in the cache","\t * @param {function} cache.get returns the value associated with the supplied key","\t * @param {function} cache.set associates the supplied key with the supplied value","\t * @param {function} [keyGenerator] creates a hash key given an array. Used to generate","\t *  cache keys from function invocation arguments","\t * @return {object} caching aspect that can be added with meld.add","\t */","\treturn function(cache, keyGenerator) {","\t\tif(!keyGenerator) {","\t\t\tkeyGenerator = JSON.stringify;","\t\t}","","\t\treturn {","\t\t\taround: function(joinpoint) {","\t\t\t\tvar key, result;","","\t\t\t\tkey = keyGenerator(joinpoint.args);","","\t\t\t\tif(cache.has(key)) {","\t\t\t\t\tresult = cache.get(key);","\t\t\t\t} else {","\t\t\t\t\tresult = joinpoint.proceed();","\t\t\t\t\tcache.set(key, result);","\t\t\t\t}","","\t\t\t\treturn result;","\t\t\t}","\t\t};","\t};","","});","}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));",""],"l":{"10":1,"11":1,"26":1,"27":0,"28":0,"31":0,"33":0,"35":0,"37":0,"38":0,"40":0,"41":0,"44":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-meld/node_modules/meld/aspect/memoize.js":{"path":"/home/travis/build/npmtest/node-npmtest-meld/node_modules/meld/aspect/memoize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1},"b":{"1":[0,1],"2":[1,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":1},"end":{"line":9,"column":18}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":7},"end":{"line":10,"column":25}}},"3":{"name":"SimpleCache","line":14,"loc":{"start":{"line":14,"column":1},"end":{"line":14,"column":24}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":7},"end":{"line":19,"column":21}}},"5":{"name":"(anonymous_5)","line":20,"loc":{"start":{"line":20,"column":7},"end":{"line":20,"column":21}}},"6":{"name":"(anonymous_6)","line":21,"loc":{"start":{"line":21,"column":7},"end":{"line":21,"column":28}}},"7":{"name":"(anonymous_7)","line":31,"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":31}}},"8":{"name":"(anonymous_8)","line":36,"loc":{"start":{"line":36,"column":56},"end":{"line":36,"column":74}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":36,"column":115}},"2":{"start":{"line":10,"column":0},"end":{"line":35,"column":3}},"3":{"start":{"line":12,"column":1},"end":{"line":12,"column":44}},"4":{"start":{"line":14,"column":1},"end":{"line":16,"column":2}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":19}},"6":{"start":{"line":18,"column":1},"end":{"line":22,"column":3}},"7":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"8":{"start":{"line":20,"column":23},"end":{"line":20,"column":47}},"9":{"start":{"line":21,"column":30},"end":{"line":21,"column":55}},"10":{"start":{"line":31,"column":1},"end":{"line":33,"column":3}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":60}},"12":{"start":{"line":36,"column":76},"end":{"line":36,"column":110}}},"branchMap":{"1":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":47},"end":{"line":36,"column":53}},{"start":{"line":36,"column":56},"end":{"line":36,"column":112}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},{"start":{"line":36,"column":34},"end":{"line":36,"column":44}}]}},"code":["/** @license MIT License (c) copyright 2011-2013 original author or authors */","","/**"," * Simple memoization aspect"," *"," * @author Brian Cavalier"," * @author John Hann"," */","(function(define) {","define(function(require) {","","\tvar createCacheAspect = require('./cache');","","\tfunction SimpleCache() {","\t\tthis._cache = {};","\t}","","\tSimpleCache.prototype = {","\t\thas: function(key) { return key in this._cache; },","\t\tget: function(key) { return this._cache[key]; },","\t\tset: function(key, value) { this._cache[key] = value; }","\t};","","\t/**","\t * Creates a simple memoizing aspect that can be used to memoize","\t * a function or method.","\t * @param {function} [keyGenerator] creates a hash key given an array. Used to generate","\t *  memo cache keys from function invocation arguments","\t * @return {object} memoizing aspect that can be added with meld.add","\t */","\treturn function(keyGenerator) {","\t\treturn createCacheAspect(new SimpleCache(), keyGenerator);","\t};","","});","}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));",""],"l":{"9":1,"10":1,"12":1,"14":1,"15":0,"18":1,"19":0,"20":0,"21":0,"31":1,"32":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-meld/node_modules/meld/aspect/trace.js":{"path":"/home/travis/build/npmtest/node-npmtest-meld/node_modules/meld/aspect/trace.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,1],"7":[1,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":1},"end":{"line":10,"column":18}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":7},"end":{"line":11,"column":25}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":10},"end":{"line":25,"column":25}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":27}}},"5":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":26}}},"6":{"name":"createTraceAspect","line":46,"loc":{"start":{"line":46,"column":8},"end":{"line":46,"column":45}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":11},"end":{"line":53,"column":22}}},"8":{"name":"(anonymous_8)","line":58,"loc":{"start":{"line":58,"column":19},"end":{"line":58,"column":36}}},"9":{"name":"(anonymous_9)","line":63,"loc":{"start":{"line":63,"column":18},"end":{"line":63,"column":38}}},"10":{"name":"indent","line":75,"loc":{"start":{"line":75,"column":1},"end":{"line":75,"column":24}}},"11":{"name":"(anonymous_11)","line":84,"loc":{"start":{"line":84,"column":56},"end":{"line":84,"column":74}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":84,"column":115}},"2":{"start":{"line":11,"column":0},"end":{"line":83,"column":3}},"3":{"start":{"line":13,"column":1},"end":{"line":13,"column":53}},"4":{"start":{"line":15,"column":1},"end":{"line":15,"column":27}},"5":{"start":{"line":16,"column":1},"end":{"line":16,"column":28}},"6":{"start":{"line":19,"column":1},"end":{"line":19,"column":11}},"7":{"start":{"line":22,"column":1},"end":{"line":22,"column":47}},"8":{"start":{"line":24,"column":1},"end":{"line":34,"column":3}},"9":{"start":{"line":26,"column":3},"end":{"line":26,"column":68}},"10":{"start":{"line":29,"column":3},"end":{"line":29,"column":72}},"11":{"start":{"line":32,"column":3},"end":{"line":32,"column":75}},"12":{"start":{"line":46,"column":1},"end":{"line":68,"column":3}},"13":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"14":{"start":{"line":49,"column":3},"end":{"line":49,"column":29}},"15":{"start":{"line":52,"column":2},"end":{"line":67,"column":4}},"16":{"start":{"line":54,"column":4},"end":{"line":54,"column":25}},"17":{"start":{"line":55,"column":4},"end":{"line":55,"column":104}},"18":{"start":{"line":59,"column":4},"end":{"line":59,"column":25}},"19":{"start":{"line":60,"column":4},"end":{"line":60,"column":101}},"20":{"start":{"line":64,"column":4},"end":{"line":64,"column":25}},"21":{"start":{"line":65,"column":4},"end":{"line":65,"column":105}},"22":{"start":{"line":75,"column":1},"end":{"line":81,"column":2}},"23":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"24":{"start":{"line":77,"column":3},"end":{"line":77,"column":22}},"25":{"start":{"line":80,"column":2},"end":{"line":80,"column":35}},"26":{"start":{"line":84,"column":76},"end":{"line":84,"column":110}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":19}},{"start":{"line":55,"column":23},"end":{"line":55,"column":103}}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":21}},{"start":{"line":60,"column":25},"end":{"line":60,"column":100}}]},"4":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":20}},{"start":{"line":65,"column":24},"end":{"line":65,"column":104}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"6":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":47},"end":{"line":84,"column":53}},{"start":{"line":84,"column":56},"end":{"line":84,"column":112}}]},"7":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":30}},{"start":{"line":84,"column":34},"end":{"line":84,"column":44}}]}},"code":["/** @license MIT License (c) copyright 2011-2013 original author or authors */","","/**"," * trace"," * @author: brian@hovercraftstudios.com"," *"," * @author Brian Cavalier"," * @author John Hann"," */","(function(define) {","define(function(require) {","","\tvar meld, joinpoint, depth, padding, simpleReporter;","","\tmeld = require('../meld');","\tjoinpoint = meld.joinpoint;","","\t// Call stack depth tracking for the default reporter","\tdepth = 0;","","\t// Padding characters for indenting traces. This will get expanded as needed","\tpadding =  '................................';","","\tsimpleReporter = {","\t\tonCall: function(info) {","\t\t\tconsole.log(indent(++depth) + info.method + ' CALL ', info.args);","\t\t},","\t\tonReturn: function(info) {","\t\t\tconsole.log(indent(depth--) + info.method + ' RETURN ', info.result);","\t\t},","\t\tonThrow: function(info) {","\t\t\tconsole.log(indent(depth--) + info.method + ' THROW ' + info.exception);","\t\t}","\t};","","\t/**","\t * Creates an aspect that traces method/function calls and reports them","\t * to the supplied reporter.","\t * @param {object} [reporter] optional reporting API to which method call/return/throw","\t *  info will be reported","\t * @param {function} [reporter.onCall] invoked when a method has been called","\t * @param {function} [reporter.onReturn] invoked when a method returns successfully","\t * @param {function} [reporter.onThrow] invoked when a method throws an exception","\t * @return {object} a tracing aspect that can be added with meld.add","\t */","\treturn function createTraceAspect(reporter) {","","\t\tif(!reporter) {","\t\t\treporter = simpleReporter;","\t\t}","","\t\treturn {","\t\t\tbefore: function() {","\t\t\t\tvar jp = joinpoint();","\t\t\t\treporter.onCall && reporter.onCall({ method: jp.method, target: jp.target, args: jp.args.slice() });","\t\t\t},","","\t\t\tafterReturning: function(result) {","\t\t\t\tvar jp = joinpoint();","\t\t\t\treporter.onReturn && reporter.onReturn({ method: jp.method, target: jp.target, result: result });","\t\t\t},","","\t\t\tafterThrowing: function(exception) {","\t\t\t\tvar jp = joinpoint();","\t\t\t\treporter.onThrow && reporter.onThrow({ method: jp.method, target: jp.target, exception: exception });","\t\t\t}","\t\t};","\t};","","\t/**","\t * Create indentation padding for tracing info based on the supplied call stack depth","\t * @param {number} depth call stack depth","\t * @return {String} padding that can be used to indent tracing output","\t */","\tfunction indent(depth) {","\t\tif(depth > padding.length) {","\t\t\tpadding += padding;","\t\t}","","\t\treturn padding.slice(0, depth-1);","\t}","","});","}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));",""],"l":{"10":1,"11":1,"13":1,"15":1,"16":1,"19":1,"22":1,"24":1,"26":0,"29":0,"32":0,"46":1,"48":0,"49":0,"52":0,"54":0,"55":0,"59":0,"60":0,"64":0,"65":0,"75":1,"76":0,"77":0,"80":0,"84":1}}}